version: "3.3"
services:
  calibre:
    image: linuxserver/calibre:latest
    container_name: calibre
    environment:
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich
      - CLI_ARGS="â€“auth-mode=basic"
      - CUSTOM_PORT=8080
    volumes:
      - /volume2/Calibre/data:/config
      - /volume2/Torrents/_watch/ePub:/media/ePubs
      - /volume2/Torrents/eBooks:/media/Torrents
    ports:
      - 7080:8080
    restart: unless-stopped

  doublecommander:
    image: linuxserver/doublecommander:latest
    container_name: doublecommander
    environment:
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich
      - TITLE="DoubleCommander"
    volumes:
      - /volume1/docker/DoubleCommander/config:/config
      #- /volume1/docker/DoubleCommander/data:/data
      - /volume2/Calibre:/data/Calibre
      - /volume2/Cinema:/data/Cinema
      - /volume2/Cinema2:/data/Cinema2
      - /volume2/Cinema3:/data/Cinema3
      - /volume2/Downloads:/data/Downloads
      - /volume2/Torrents:/data/Torrents
    ports:
      - 43000:3000
    restart: unless-stopped  

#region : DOZZLE
#       : https://hub.docker.com/r/amir20/dozzle/
#__________________________________________________________________________
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    ports:
      - 9999:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich
      - DOZZLE_NO_ANALYTICS=true
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s

  tmm:
    image: tinymediamanager/tinymediamanager:latest
    container_name: tmm
    environment:
      - USER_ID=1026
      - GROUP_ID=100
      - TZ=Europe/Zurich
      - LANG=en_US.UTF-8
    volumes:
      - /volume2/Dockers/TMM/config:/data
      - /volume2/Dockers/TMM/addons:/app/addons
      #- /volume2/Dockers/TMM/launcher-extra.yml:/app/launcher-extra.yml
      - /volume2/Cinema:/media/cinema
      - /volume2/Cinema2:/media/cinema2
      - /volume2/Cinema3:/media/cinema3
    ports:
      - 44000:4000
    restart: unless-stopped 
    
  redis:
    image: redis:alpine
    container_name: redis
    command: "redis-server --loglevel warning"
    environment:
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich
    volumes:
      - /volume1/docker/Redis/config:/usr/local/etc/redis/
      #- /volume2/Dockers/Redis/data:/data/
      - redis_data:/data/
    ports:
      - "6379:6379"
    restart: "always"

  mongodb:
    container_name: meshcentral_db
    restart: always
    image: mongo:latest
    environment:
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich      
    ports:
      - 27017:27017
    volumes:
      - /volume2/Dockers/MeshCentral/db:/data/db
      
  meshcentral:
    restart: always
    container_name: meshcentral
    depends_on:
      - 'mongodb'
    image: typhonragewind/meshcentral:mongodb
    ports:
      - 8086:443 #MeshCentral will moan and try everything not to use port 80, but you can also use it if you so desire, just change the config.json according to your needs
    environment:
      - HOSTNAME=bornext.com     #your hostname
      - REVERSE_PROXY=false     #set to your reverse proxy IP if you want to put meshcentral behind a reverse proxy
      - REVERSE_PROXY_TLS_PORT=443
      - IFRAME=false #set to true if you wish to enable iframe support
      - ALLOW_NEW_ACCOUNTS=true    #set to false if you want disable self-service creation of new accounts besides the first (admin)
      - WEBRTC=false  #set to true to enable WebRTC - per documentation it is not officially released with meshcentral, but is solid enough to work with. Use with caution
      - NODE_ENV=production
      - PUID=1026
      - PGID=100
      - TZ=Europe/Zurich
    volumes:
      - /volume2/Dockers/MeshCentral/data:/opt/meshcentral/meshcentral-data
      - /volume2/Dockers/MeshCentral/user_files:/opt/meshcentral/meshcentral-files
volumes:
  redis_data:
